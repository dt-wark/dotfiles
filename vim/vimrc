" Vundle settings
set nocompatible              " be iMproved, required
filetype off                  " required

" Set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" Let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" Github plugins
Plugin 'vim-scripts/The-NERD-tree'
Plugin 'jistr/vim-nerdtree-tabs'
Plugin 'Xuyuanp/nerdtree-git-plugin'
Plugin 'airblade/vim-gitgutter'
Plugin 'majutsushi/tagbar'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" Scheme settings
syntax on

" For Vim 7
set t_Co=256

" For Vim 8
if (has("termguicolors"))
  set termguicolors
endif

let g:oceanic_next_terminal_bold = 1
let g:oceanic_next_terminal_italic = 1

hi Normal guibg=NONE ctermbg=NONE
hi MatchParen cterm=bold ctermbg=black ctermfg=darkgreen

let python_highlight_all = 1

colorscheme OceanicNext

" Search settings
set showmatch
set hlsearch
set incsearch
set smartcase
set ignorecase

" Tabs, indent settings
set tabstop=4
set shiftwidth=4
set showtabline=1
set smarttab
set expandtab
set autoindent
set wrap
set linebreak
set textwidth=80

" Enables smartindent after keywords in Python files
autocmd BufRead *.py set smartindent cinwords=if,elif,else,for,while,try,except,finally,def,class

" Enables smartbackspace
set backspace=indent,eol,start

" Disable autoindent when pasting text
" https://coderwall.com/p/if9mda/automatically-set-paste-mode-in-vim-when-pasting-in-insert-mode
let &t_SI .= "\<Esc>[?2004h"
let &t_EI .= "\<Esc>[?2004l"

function! XTermPasteBegin()
    set pastetoggle=<Esc>[201~
    set paste
    return ""
endfunction

inoremap <special> <expr> <Esc>[200~ XTermPasteBegin()

" Disables automatic commenting on new line
autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o

" Splits open at the bottom and right
set splitright

" Shortcutting split navigation, saving a keypress
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <c-l> <C-w>l

" New tab is aliased to Ctrl+t
nnoremap <silent> <C-t> :tabnew<CR>

" Tag list
map <leader>t :TagbarToggle<CR>

" Set default clipboard to the system clipboard
set clipboard=unnamedplus

" Past from system clipboard with ctrl+i instead of shift+insert
map <S-Insert> <C-i>
map! <S-Insert> <C-i>

" Automatically deletes all trailing whitespace on save
autocmd BufWritePre * %s/\s\+$//e

" Global replace is aliased to S
nnoremap S :%s//g<Left><Left>

" Indent/unindent with tab/shift-tab
nmap <Tab> >>
imap <S-Tab> <Esc><<i
nmap <S-tab> <<

" Enables spellchecker
map <F5> :setlocal spell! spelllang=en_us,ru_yo<CR>

" File browser
let NERDTreeIgnore = ['\.pyc$', '__pycache__']
let NERDTreeMinimalUI = 1
let g:nerdtree_open = 0
map <leader>n :call NERDTreeToggle()<CR>
function NERDTreeToggle()
    NERDTree
    if g:nerdtree_open == 1
        let g:nerdtree_open = 0
    else
        let g:nerdtree_open = 1
        wincmd p
    endif
endfunction


" File settings
set encoding=utf-8
set fileencodings=utf-8,cp1251
set fileformat=unix

" Disables backups and swap files
set nobackup
set noswapfile

" Other VIM shiiit
set number relativenumber
set undolevels=1000
set termencoding=utf-8

